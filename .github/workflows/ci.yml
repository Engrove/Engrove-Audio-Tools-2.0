# BEGIN FILE: .github/workflows/ci.yml
# .github/workflows/ci.yml
# === SYFTE & ANSVAR ===
# Detta är den enda, konsoliderade CI/CD-pipelinen för projektet.
# Den ersätter de separata generate_context.yml och process_session_data.yml
# för att eliminera race conditions och garantera korrekt exekveringsordning.
#
# === ARBETSFLÖDE ===
# 1. Triggas vid push till relevanta filer (källkod, sessionsdata, dokumentation).
# 2. Bearbetar sessionsdata och uppdaterar dokumentationsfiler (t.ex. core_file_info.json) på runnern.
# 3. Genererar den fullständiga context.json baserat på det uppdaterade tillståndet.
# 4. Bygger och laddar upp GitHub Pages-artefakten (både index.html och det nya index2.html).
# 5. Committar de genererade dokumentationsfilerna tillbaka till repot med [skip ci].
# 6. Driftsätter den nya GitHub Pages-sajten.
#
# SYNTAX WARNING: Detta är fel: "name: STEP 3: Generate AI Context JSON", en deklaration får aldrig innehålla dubbla kolon ":"
#                 Detta är rätt syntax: "name: STEP 3 Generate AI Context JSON"
# PUSH TRIGGER: '.buildtrigger' ska vara den enda aktiva push triggern för att exakt styra när en körning ska ske. de övrika trigger objekten ska finnas knar men vara kommentarer.
# === HISTORIK ===
# * v1.0 (2025-08-13): Initial skapelse av Frankensteen. Konsoliderar två workflows.
# * v1.1 (2025-08-13): Korrigerat ett syntaxfel i cron-schemat (saknade citattecken).
# * v1.2 (2025-08-13): Refaktorerat session-bearbetning för att använda miljövariabler.
# * v1.3 (2025-08-13): (Help me God) Korrigerat YAML-parsingsfel genom att ta bort onödiga citattecken runt en miljövariabel.
# * v2.0 (2025-08-14): Korrigerat anropet till build_relations_graph.py för att inkludera project_overview JSON.
# * v2.1 (2025-08-15): Lade till 'push_options: --force' i auto-commit-steget för att hantera non-fast-forward-fel.
# * v2.2 (2025-08-15): Lade till byggsteg för det nya UI-verktyget (engrove_audio_tools_creator.py).
# * v2.3 (2025-08-16): Korrigerat anropet till engrove_audio_tools_creator.py för att använda det nya kommandobaserade API:et ('build-ui').
# * v2.4 (2025-08-16): (Help me God - Domslut) Lade till 'clean: true' till checkout-steget för att säkerställa en ren byggmiljö och eliminera potentiella cachningsproblem.
# * v2.5 (2025-08-17): (Help me God - Grundorsaksanalys) Lade till ett nytt steg för att skapa project_overview.json och korrigerade anropet till engrove_audio_tools_creator.py med det saknade argumentet.
# * v2.6 (2025-08-17): Lade till steg för att bygga Einstein RAG-index (ChromaDB), inklusive cachning.
# * v2.7 (2025-08-17): (Help me God - Domslut) Ersatt den bräckliga `printf`-metoden för JSON-konstruktion med en robust, direkt strängtilldelning för att lösa ett shell-parsingsfel.
# * v2.8 (2025-08-17): (Help me God - Domslut) Omarbetat RAG-indexeringen för att generera en portabel .json-fil istället för en ChromaDB-databas, vilket löser GitHubs filstorleksgräns.
# * v2.9 (2025-08-17): (Help me God - Domslut) Optimerat installationen av beroenden genom att installera en CPU-specifik version av torch för att dramatiskt minska installationstiden.
# * v2.10 (2025-08-17): (Help me God - Domslut) Korrigerat installationskommandot till att använda `--extra-index-url` för att inte exkludera PyPI, vilket löste installationsfelet.
# * v2.11 (2025-08-17): (Help me God - Domslut) Finaliserat RAG-pipelinen. Anropet till build_vector_index.py har uppdaterats och auto-commit-steget hanterar nu den komprimerade einstein_index.json.gz.
# * v2.12 (2025-08-17): (Engrove Mandate) Infört en manuell "strömbrytare" (.einstein) för att göra den tidskrävande RAG-indexeringen till en opt-in-process.
# * v2.13 (2025-08-17): (Help me God - Grundorsaksanalys) Korrigerat ett kritiskt fel där CI/CD misslyckades om `.einstein`-filen saknades. Commit-steget försöker inte längre committa den temporära trigger-filen och den raderas korrekt efter bygge.
# * v2.14 (2025-08-17): (Help me God - Domslut) Lade till ett villkorligt steg för att skapa en tom "dummy" `einstein_index.json.gz` när den riktiga indexeringen hoppas över. Detta löste ett 404-fel på klient-sidan.
# * v2.15 (2025-08-18): (Help me God - Domslut) Korrigerat grundorsaken till 404-felet. Säkerställer nu att `einstein_index.json.gz` (både äkta och dummy) alltid placeras i `dist/`-mappen före uppladdning.
# * v2.18 (2025-08-20): (Help me God - Grundorsaksanalys) Korrigerat `file_pattern` i commit-steget för att inkludera den nya `protocol_bundle.md`-artefakten istället för den föråldrade `.pbf.json`.
# * SHA256_LF: UNVERIFIED

name: Consolidated CI/CD and Tools Pipeline

on:
  push:
    branches: [ "main" ]
    paths:
      - '.buildtrigger'
      - 'sessions/**.json'
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: write
  pages: write
  id-token: write

env:
  PYTHON_VERSION: '3.11'
  SITE_DIR: 'dist'
  JSON_FILE: 'context.json'
  LEGACY_HTML_FILE: 'index.html'
  NEW_HTML_FILE: 'index2.html'
  METADATA_FILE: 'metadata.json'
  PROJECT_OVERVIEW_FILE: 'project_overview.json'
  EINSTEIN_INDEX_BASENAME: 'einstein_index'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      context-generated: ${{ steps.create-legacy-html.outputs.success }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          clean: true

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Cache Hugging Face models
        uses: actions/cache@v3
        with:
          path: ~/.cache/huggingface
          key: ${{ runner.os }}-huggingface-models-v1

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --extra-index-url https://download.pytorch.org/whl/cpu -r requirements.txt

      - name: Prepare Output Directory
        run: mkdir -p "${{ env.SITE_DIR }}"

          
      - name: STEP 1 Process Session Data (if needed)
        id: process-sessions
        env:
          COMMIT_SHA: ${{ github.sha }}
        run: |
          echo "Running session data processing..."
          python scripts/history/historical_reconstruction_builder.py sessions/ .
          python scripts/update_core_info.py sessions/ docs/core_file_info.json $COMMIT_SHA
          echo "Session processing complete."

      - name: STEP 2A Generate File Relations Graph
        id: generate-relations
        run: |
          echo "Generating file relations graph..."
          PROJECT_OVERVIEW_JSON='{"repository": "${{ github.repository }}", "branch": "${{ github.ref_name }}"}'
          python scripts/build_relations_graph.py "$PROJECT_OVERVIEW_JSON"
          echo "Graph generation complete."

      - name: STEP 2A-2 Aggregate Session Manifests
        id: aggregate-manifests
        run: |
          echo "Aggregating session summary artifacts into manifest..."
          python scripts/build_session_manifest.py
          echo "Session manifest created successfully."
          
      - name: STEP 2B Check for Einstein Index Trigger
        id: check_einstein_trigger
        run: |
          if [ -f ".einstein" ]; then
            echo "run_index=true" >> $GITHUB_OUTPUT
            echo "Einstein trigger file found. Index will be rebuilt."
          else
            echo "run_index=false" >> $GITHUB_OUTPUT
            echo "Einstein trigger file not found. Skipping index build."
          fi

      - name: STEP 2C Build Einstein Vector Index (if triggered)
        if: steps.check_einstein_trigger.outputs.run_index == 'true'
        run: |
          echo "Building Einstein RAG vector index..."
          python scripts/rag/build_vector_index.py ./ "${{ env.EINSTEIN_INDEX_BASENAME }}"
          echo "Vector index built successfully."
          echo "Moving index to deployment directory..."
          mv "${{ env.EINSTEIN_INDEX_BASENAME }}.json.gz" "${{ env.SITE_DIR }}/"
          echo "Removing trigger file after successful build."
          rm .einstein

      - name: STEP 2D Create Dummy Einstein Index (if skipped and not present)
        if: steps.check_einstein_trigger.outputs.run_index == 'false'
        run: |
          FILE_PATH="${{ env.SITE_DIR }}/${{ env.EINSTEIN_INDEX_BASENAME }}.json.gz"
          if [ ! -f "$FILE_PATH" ]; then
            echo "Dummy index does not exist. Creating it to prevent 404 errors."
            DUMMY_JSON='{"model": "dummy", "createdAt": "$(date -Iseconds)", "chunks": []}'
            echo "$DUMMY_JSON" | gzip > "$FILE_PATH"
            echo "Dummy index created at $FILE_PATH."
          else
            echo "Index file already exists at $FILE_PATH. Skipping dummy file creation."
          fi

      - name: STEP 3 Generate AI Context JSON
        id: generate-json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Generating full context from potentially updated file system..."
          set -e
          if python scripts/generate_full_context.py > "${{ env.SITE_DIR }}/${{ env.JSON_FILE }}" 2> generation.log; then
            echo "success=true" >> "$GITHUB_OUTPUT"
          else
            echo "success=false" >> "$GITHUB_OUTPUT"
            cat generation.log
            exit 1
          fi

      - name: STEP 4A Create Legacy HTML Wrapper (index.html)
        id: create-legacy-html
        if: steps.generate-json.outputs.success == 'true'
        run: |
          set -e
          python scripts/wrap_json_in_html.py "${{ env.SITE_DIR }}/${{ env.LEGACY_HTML_FILE }}"
          echo "success=true" >> "$GITHUB_OUTPUT"
      
      - name: STEP 4B Create Project Overview Artifact
        id: create-project-overview
        run: |
          echo "Creating project overview JSON artifact..."
          printf '{"repository": "%s", "branch": "%s"}' "${{ github.repository }}" "${{ github.ref_name }}" > "${{ env.PROJECT_OVERVIEW_FILE }}"
          echo "Artifact created at ${{ env.PROJECT_OVERVIEW_FILE }}"

#      - name: STEP 4C Create New UI HTML (index2.html)
#        id: create-new-html
#        run: |
#          echo "Generating new UI from engrove_audio_tools_creator.py..."
#          python scripts/engrove_audio_tools_creator.py build-ui \
#            "${{ env.SITE_DIR }}/${{ env.NEW_HTML_FILE }}" \
#            "${{ env.SITE_DIR }}/${{ env.JSON_FILE }}" \
#            "docs/file_relations.json" \
#            "${{ env.PROJECT_OVERVIEW_FILE }}" \
#            "docs/core_file_info.json"
#          echo "New UI HTML created successfully."

      - name: STEP 5 Create Metadata for Deployment
        if: steps.create-legacy-html.outputs.success == 'true'
        run: |
          cat > "${{ env.SITE_DIR }}/${{ env.METADATA_FILE }}" << EOF
          {
            "generated_at": "$(date -Iseconds)",
            "workflow_run_id": "${{ github.run_id }}",
            "commit_sha": "${{ github.sha }}",
            "repository": "${{ github.repository }}"
          }
          EOF

      - name: STEP 6A Upload Pages Artifact
        if: steps.create-legacy-html.outputs.success == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.SITE_DIR }}
      
      - name: STEP 6B Package AI Protocols
        id: package-protocols
        run: |
          echo "Packaging specified AI protocols and configs into a compressed bundle..."
          python scripts/protocol_packager.py \
            --dir-recursive docs/ai_protocols \
            --files tools/frankensteen_learning_db.json package.json vite.config.js .github/workflows/ci.yml vite.config.js requirements.txt package.json docs/ByggLogg.json docs/Chatthistorik.json docs/Chatthistorik.json docs/session_manifest.json docs/core_file_info.json \
            --output-dir docs/ai_protocols/compact \
            --exclude compact
            
      - name: STEP 7 Commit Documentation and Session Artifacts
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: |
            chore(docs, rag): Automatiskt uppdatera sessionsdata och Einstein-index

            Genererat av ci.yml workflow för commit ${{ github.sha }}.

            [skip ci]
          commit_user_name: 'Frankensteen (Bot)'
          commit_user_email: 'frankensteen-bot@users.noreply.github.com'
          file_pattern: 'docs/session_manifest.json docs/ByggLogg.json docs/Chatthistorik.json docs/ai_protocol_performance.json tools/frankensteen_learning_db.json docs/ai_protocols/DynamicProtocols.json docs/core_file_info.json docs/file_relations.json public/data/schemas/*.schema.json project_overview.json dist/einstein_index.json.gz docs/ai_protocols/compact/protocol_bundle.md'
          push_options: '--force'

  deploy:
    needs: build
    if: success() && needs.build.outputs.context-generated == 'true'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

# END FILE: .github/workflows/ci.yml
