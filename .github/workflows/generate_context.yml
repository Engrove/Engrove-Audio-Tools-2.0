# .github/workflows/generate_context.yml
#
# HISTORIK:
# * v1.0 - v10.0: Tidigare versioner med diverse felaktiga inbäddningsförsök.
# * v12.0 (Correct Architecture): Implementerar den korrekta, robusta arkitekturen.
#   Ansvaret är nu separerat: ett skript genererar JSON, ett annat skript
#   wrappar det i HTML. Arbetsflödet är rent, läsbart och underhållbart.
# * v13.0 (Context Builder Integration): Integrerat med det nya interaktiva "Context Builder"-verktyget.
#   Workflow-filen krävde minimala ändringar tack vare den robusta arkitekturen.
#   Lade till CSS-filer i push-triggern för att säkerställa fullständig kontext.
#
# TILLÄMPADE REGLER (Frankensteen v3.7):
# - Följer Single Responsibility Principle. Varje steg gör en sak.
# - Inga inbäddade skript. Anropar externa skript för maximal robusthet.
# - Validerar utdata från varje kritiskt steg.

name: Generate and Deploy AI Context Data

on:
  push:
    branches: [ "main" ]
    paths:
      - '**/*.py'
      - '**/*.js'
      - '**/*.ts'
      - '**/*.vue'
      - '**/*.html'
      - '**/*.css' # <-- NYTT: Inkluderar CSS-filer för komplett kontext
      - '**/*.md'
      - '.github/workflows/generate_context.yml'
      - 'requirements.txt'
      - 'docs/**.md'
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

env:
  PYTHON_VERSION: '3.11'
  SITE_DIR: '_site'
  JSON_FILE: 'context.json'
  HTML_FILE: 'index.html' # Denna fil blir nu vår interaktiva "Context Builder"
  METADATA_FILE: 'metadata.json'

jobs:
  validate-and-build:
    runs-on: ubuntu-latest
    outputs:
      context-generated: ${{ steps.create-html.outputs.success }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Dependencies
        run: pip install --upgrade pip && pip install -r requirements.txt

      - name: Prepare Output Directory
        run: mkdir -p ${{ env.SITE_DIR }}

      - name: Generate Raw Context JSON
        id: generate-json
        run: |
          if python scripts/generate_full_context.py > ${{ env.SITE_DIR }}/${{ env.JSON_FILE }} 2> generation.log; then
            echo "[INFO] Rå context.json genererades framgångsrikt."
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "[ERROR] Misslyckades med att generera context.json. Se logg nedan:"
            cat generation.log
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Interactive HTML Builder from JSON
        id: create-html
        if: steps.generate-json.outputs.success == 'true'
        run: |
          # Notera: Det första argumentet (input json) ignoreras av den nya versionen av skriptet,
          # men behålls för bakåtkompatibilitet och tydlighet i pipelinen.
          if python scripts/wrap_json_in_html.py ${{ env.SITE_DIR }}/${{ env.JSON_FILE }} ${{ env.SITE_DIR }}/${{ env.HTML_FILE }}; then
            echo "[INFO] Interaktiv context_builder.html skapades framgångsrikt."
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "[ERROR] Misslyckades med att skapa den interaktiva HTML-byggaren."
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Create Metadata
        if: steps.create-html.outputs.success == 'true'
        run: |
          cat > ${{ env.SITE_DIR }}/${{ env.METADATA_FILE }} << EOF
          {
            "generated_at": "$(date -Iseconds)",
            "workflow_run_id": "${{ github.run_id }}",
            "commit_sha": "${{ github.sha }}",
            "repository": "${{ github.repository }}"
          }
          EOF
          echo "[INFO] metadata.json skapad."

      - name: Upload Pages Artifact
        if: steps.create-html.outputs.success == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.SITE_DIR }}

  deploy:
    needs: validate-and-build
    if: needs.validate-and-build.outputs.context-generated == 'true'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
