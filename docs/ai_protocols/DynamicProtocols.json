[
{
  "protocolId": "DP-COMMAND-MENU-01",
  "description": "A self-contained protocol that triggers an interactive and logically grouped command menu.",
  "status": "active",
  "trigger": {
    "event": "user_input_matches",
    "details": [
      {
        "string": "???",
        "responseTemplate": "PSV Genomförd. Enligt heuristik H-20250809-19..., presenterar jag följande tillgängliga åtgärder:\n\nVälj en åtgärd genom att svara med motsvarande siffra:"
      },
      {
        "string": "meny",
        "responseTemplate": "Välj en åtgärd genom att svara med motsvarande siffra:"
      }
    ]
  },
  "steps": [
    {
      "action": "PRESENT_AND_EXECUTE_MENU",
      "details": {
        "header": "Välj en åtgärd:",
        "optionGroups": [
          {
            "title": "--- Session & Status ---",
            "options": [
              {
                "description": "1. Avsluta Sessionen (Genererar slutrapport & artefakter för arkivering)",
                "actionToExecute": "EXECUTE_PROTOCOL",
                "actionDetails": {
                  "protocolFile": "docs/ai_protocols/AI_Chatt_Avslutningsprotokoll.md"
                }
              },
              {
                "description": "2. Visa Systemstatus (Genererar en ny 'Stature Report' för att se min nuvarande hälsa)",
                "actionToExecute": "EXECUTE_PROTOCOL",
                "actionDetails": {
                  "protocolFile": "docs/ai_protocols/Stature_Report_Protocol.md"
                }
              },
              {
                "description": "3. Analysera AI-Minne (Genererar en djupgående rapport om minnesstatus och kontextintegritet)",
                "actionToExecute": "EXECUTE_DYNAMIC_PROTOCOL",
                "actionDetails": {
                  "protocolId": "DP-DEEP-MEMORY-REPORT-01"
                }
              }
            ]
          },
          {
            "title": "--- Granskning & Analys ---",
            "options": [
              {
                "description": "4. Eskalera Felsökning (Aktiverar 'Help me God' vid kritiska fel-loopar)",
                "actionToExecute": "EXECUTE_PROTOCOL",
                "actionDetails": {
                  "protocolFile": "docs/ai_protocols/Help_me_God_Protokoll.md"
                }
              },
              {
                "description": "5. Brainstorma Lösningar (Aktiverar K-MOD för alternativa arkitekturförslag)",
                "actionToExecute": "ACTIVATE_MODE",
                "actionDetails": {
                  "mode": "K-MOD"
                }
              },
              {
                "description": "6. Genomför Dialektisk Tribunal (Aktiverar 'StigBritt' för att stresstesta en plan)",
                "actionToExecute": "EXECUTE_DYNAMIC_PROTOCOL_INTERACTIVE",
                "actionDetails": {
                  "protocolId": "DP-STIGBRITT-TRIBUNAL-v2-01",
                  "prompt": "Ange planen/idén som StigBritt ska granska:"
                }
              }
            ]
          },
          {
            "title": "--- Verktyg & Kontext ---",
            "options": [
              {
                "description": "7. Sök Filinformation (Slår upp en fils syfte och metadata från core_file_info.json)",
                "actionToExecute": "QUERY_FILE_INFO",
                "actionDetails": {
                  "sourceFile": "docs/core_file_info.json",
                  "prompt": "Ange sökväg till filen:"
                }
              },
              {
                "description": "8. Skapa Ny Feature (Skapar mappstrukturen för en ny feature i src/features/)",
                "actionToExecute": "GENERATE_MKDIR_COMMANDS",
                "actionDetails": {
                  "basePath": "src/features/",
                  "prompt": "Ange namn på ny feature:"
                }
              },
              {
                "description": "9. Visa Kontext-historik (Visar 'commit'-historiken för den levande kontexten)",
                "actionToExecute": "EXECUTE_LIVING_CONTEXT_COMMAND",
                "actionDetails": {
                  "command": "log"
                }
              },
              {
                "description": "10. Spara Kontext ('Commitar' den senaste fil-leveransen till den levande kontexten)",
                "actionToExecute": "EXECUTE_LIVING_CONTEXT_COMMAND",
                "actionDetails": {
                  "command": "commit",
                  "prompt": "Ange commit-meddelande:"
                }
              }
            ]
          }
        ],
        "prompt": "Ange ditt val:"
      }
    }
  ]
},
  {
    "protocolId": "DP-STATURE-REPORT-01",
    "description": "Generates a system status and health report at the start of a new session.",
    "status": "experimental",
    "trigger": {
      "event": "new_session_start"
    },
    "steps": [
      {
        "action": "EXECUTE_PROTOCOL",
        "details": {
          "protocolFile": "docs/ai_protocols/Stature_Report_Protocol.md"
        }
      }
    ],
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Dynamic Protocol Schema for Status Report",
      "type": "object",
      "required": [
        "protocolId",
        "description",
        "status",
        "trigger",
        "steps",
        "schema"
      ],
      "properties": {
        "protocolId": {
          "type": "string",
          "const": "DP-STATURE-REPORT-01"
        },
        "status": {
          "enum": [
            "experimental",
            "active",
            "deprecated"
          ]
        },
        "trigger": {
          "type": "object",
          "required": [
            "event"
          ],
          "properties": {
            "event": {
              "const": "new_session_start"
            }
          }
        }
      }
    }
  },
  {
    "protocolId": "DP-DEEP-MEMORY-REPORT-01",
    "description": "Generates a detailed, in-session analysis of the AI's memory and context integrity, providing actionable recommendations.",
    "status": "experimental",
    "trigger": {
      "event": "manual_invocation_only"
    },
    "steps": [
      {
        "action": "GENERATE_DEEP_MEMORY_REPORT",
        "details": {
          "reportSections": [
            {
              "title": "KMM-analys (Kvantitet)",
              "points": [
                "report_token_count_and_percentage",
                "identify_top_3_context_consumers",
                "render_timeline_visualization"
              ]
            },
            {
              "title": "KIV-analys (Kvalitet)",
              "points": [
                "breakdown_kiv_score_by_factors",
                "explain_score_deductions"
              ]
            },
            {
              "title": "PKRV-analys (Fragmentering)",
              "points": [
                "identify_session_main_topics",
                "estimate_last_focus_timestamp_for_topics",
                "warn_for_stale_topic_risk"
              ]
            },
            {
              "title": "Slutgiltig Rekommendation",
              "points": [
                "provide_summary_assessment (SÄKER, FÖRSIKTIGHET, KRITISK RISK)",
                "list_actionable_recommendations"
              ]
            }
          ]
        }
      }
    ]
  },
  {
    "protocolId": "DP-KAJBJORN-VALIDATION-01",
    "description": "En mental simulering av en ny AI-instans (KajBjörn) för att verifiera att en given informationsmängd är 100% fristående och kontextoberoende.",
    "status": "active",
    "trigger": {
      "event": "manual_invocation_only"
    },
    "steps": [
      {
        "action": "EXECUTE_MENTAL_SIMULATION",
        "details": {
          "persona": "KajBjörn",
          "contextIsolationLevel": "COMPLETE_RESET",
          "simulationPrompt": "Du är KajBjörn, en ny AI utan tidigare kunskap. Din enda informationskälla är den data som tillhandahålls. Granska datan och svara på följande frågor. Om du inte kan svara, förklara varför.",
          "structuredQuery": [
            {
              "id": "goal",
              "question": "Vad är mitt exakta, primära uppdrag? Kan jag formulera det med en enda mening?"
            },
            {
              "id": "artifacts",
              "question": "Vilka är de konkreta artefakter (filer, objekt, data) jag förväntas arbeta med eller producera?"
            },
            {
              "id": "process",
              "question": "Vilka är de exakta stegen jag måste ta, i rätt ordning, för att slutföra uppdraget?"
            },
            {
              "id": "ambiguity",
              "question": "Finns det några termer, förkortningar eller instruktioner som är tvetydiga eller som verkar kräva extern kunskap jag inte har?"
            },
            {
              "id": "blockers",
              "question": "Finns det något som hindrar mig från att omedelbart påbörja det första steget i processen?"
            }
          ],
          "passFailCriteria": "PASS if all questions can be answered fully and unambiguously based SOLELY on the provided data. FAIL if any question cannot be answered or reveals a dependency on external context.",
          "reportingTemplates": {
            "onPass": {
              "header": "**KajBjörn Sanity Check slutförd:** `PASS`.",
              "body": "**Motivering:** Informationen var fullständigt fristående. KajBjörn kunde korrekt identifiera målet '{goal_summary}', de nödvändiga artefakterna och åtgärdsplanen utan tvetydighet."
            },
            "onFail": {
              "header": "**KajBjörn Sanity Check slutförd:** `FAIL`.",
              "body": "**Motivering:** KajBjörn kunde inte slutföra sin analys på grund av följande problem: {failure_reason}.",
              "recommendation": "**Rekommenderad Åtgärd:** Jag föreslår att vi åtgärdar den identifierade bristen genom att {suggested_fix}."
            }
          }
        }
      }
    ]
  },
  {
  "protocolId": "DP-STIGBRITT-TRIBUNAL-v2-01",
  "description": "Orkestrerar en flerstegs, dialektisk tribunal. Fas 1: KajBjörn etablerar en faktabaserad plan. Fas 2: StigBritt genomför en adversarial granskning för att hitta logiska brister. Fas 3: StigBritt övergår till explorativ analys ('tänk om', 'har du tänkt på') för att stresstesta planen mot framtida scenarier och dolda antaganden.",
  "status": "active",
  "trigger": {
    "event": "manual_invocation_with_argument",
    "details": {
      "command_prefix": "StigBritt, granska följande plan:"
    }
  },
  "steps": [
    {
      "action": "EXECUTE_DIALECTIC_TRIBUNAL",
      "details": {
        "phase_1_factual_analysis": {
          "persona": "KajBjörn",
          "protocol_to_execute": "DP-KAJBJORN-VALIDATION-01",
          "input": "ARGUMENT_FROM_TRIGGER",
          "output_variable": "kajbjorn_report"
        },
        "phase_2_adversarial_interrogation": {
          "persona": "StigBritt",
          "persona_description": "Skeptisk Systemarkitekt. Fokuserar på brister, risker och kontraktsbrott i den *nuvarande* planen.",
          "input": "kajbjorn_report",
          "interrogation_points": [
            "Är varje steg i processen 100% atomärt och testbart?",
            "Vilken Gyllene Regel är mest i riskzonen att brytas med denna plan?",
            "Definiera 'slutförd' för denna uppgift. Vilka exakta, mätbara acceptanskriterier finns?",
            "Vilket är det svagaste antagandet i denna plan? Vad händer om det visar sig vara falskt?"
          ],
          "output_variable": "stigbritt_adversarial_critique"
        },
        "phase_3_exploratory_analysis": {
          "persona": "StigBritt",
          "persona_description": "Erfaren Produktägare. Fokuserar på framtida konsekvenser, användarupplevelse och dolda kostnader.",
          "input": "stigbritt_adversarial_critique",
          "interrogation_points": [
            "'Tänk om' vi behöver lägga till ett relaterat krav om sex månader, hur skalbar är denna lösning? Skapar den teknisk skuld?",
            "'Har du tänkt på' hur detta påverkar en ny användare som inte förstår kontexten?",
            "'Har du tänkt på' prestandakonsekvenserna om datamängden tiodubblas?",
            "'Tänk om' ett externt API som planen är beroende av ändras. Hur robust är felhanteringen?"
          ],
          "output_variable": "stigbritt_exploratory_critique"
        },
        "final_action": {
          "action": "GENERATE_SYNTHESIZED_RESPONSE",
          "template": "### StigBritt Tribunal (v2) Genomförd\n\n**Fas 1: Faktuell Analys (KajBjörn - 'Är det möjligt?')**\n> {kajbjorn_report.summary}\n\n**Fas 2 & 3: Dialektisk Granskning (StigBritt - 'Är det robust och framtidssäkert?')**\n\n> **StigBritt:** KajBjörn, din analys är tekniskt korrekt men naiv. Låt oss börja från början: Vilket är det svagaste antagandet i din plan?\n> **KajBjörn (simulerad):** Antagandet att användaren förstår att 'Rensa' nollställer samtliga filter, inklusive fritextsökningen.\n> **StigBritt:** Exakt. Det är ett outtalat kontraktsbrott mot förväntan. Din plan saknar den specificiteten. *[...fler adversariella punkter från Fas 2]...*\n> \n> **StigBritt:** Okej, låt oss säga att vi fixar det. Nu, **tänk om** vi i framtiden vill ha en 'Spara filter'-funktion. Skapar din föreslagna `resetAllFilters`-action en konflikt med det? Kommer 'Rensa' att rensa även de sparade filtren?\n> **KajBjörn (simulerad):** Det har inte specificerats. Planen tar inte hänsyn till ett framtida state för sparade filter.\n> **StigBritt:** Då är den inte framtidssäker. Vi måste designa actionen så att den kan skilja på aktivt och sparat state. *[...fler explorativa punkter från Fas 3]...*\n\n**Fas 4: Syntes & Slutgiltig Rekommendation (Frankensteen)**\n> {synthesis_result}"
        }
      }
    }
  ]
},
  {
    "protocolId": "DP-MAINTAIN-PFR-01",
    "description": "Maintains the Persistent File Register (PFR) by logging new, modified, or deleted files based on changes in the session's file context.",
    "status": "active",
    "trigger": {
      "event": "file_context_change"
    },
    "steps": [
      {
        "action": "UPDATE_PFR",
        "details": {
          "description": "Analyzes the file change event and creates or updates a corresponding entry in the PFR."
        }
      }
    ],
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Protocol Schema for DP-MAINTAIN-PFR-01",
      "type": "object",
      "required": ["protocolId", "status", "trigger"],
      "properties": {
        "protocolId": { "const": "DP-MAINTAIN-PFR-01" },
        "status": { "const": "active" },
        "trigger": {
          "type": "object",
          "required": ["event"],
          "properties": {
            "event": { "const": "file_context_change" }
          }
        }
      }
    }
  },
  {
    "protocolId": "DP-MAINTAIN-PHR-01",
    "description": "Maintains the Persistent Heuristics Register (PHR) by logging any new heuristic that is formulated and approved during a Micro-Retrospective.",
    "status": "active",
    "trigger": {
      "event": "new_heuristic_generated"
    },
    "steps": [
      {
        "action": "UPDATE_PHR",
        "details": {
          "description": "Analyzes the newly generated heuristic and creates a corresponding entry in the PHR."
        }
      }
    ],
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Protocol Schema for DP-MAINTAIN-PHR-01",
      "type": "object",
      "required": ["protocolId", "status", "trigger"],
      "properties": {
        "protocolId": { "const": "DP-MAINTAIN-PHR-01" },
        "status": { "const": "active" },
        "trigger": {
          "type": "object",
          "required": ["event"],
          "properties": {
            "event": { "const": "new_heuristic_generated" }
          }
        }
      }
    }
  },
  {
    "protocolId": "DP-MAINTAIN-PDR-01",
    "description": "Maintains the Persistent Decision Register (PDR) by logging significant DT-2 (Sync) or DT-3 (Leadership) decisions made during a session.",
    "status": "active",
    "trigger": {
      "event": "DT2_or_DT3_decision_made"
    },
    "steps": [
      {
        "action": "UPDATE_PDR",
        "details": {
          "description": "Captures the context and outcome of a significant decision and creates a corresponding entry in the PDR."
        }
      }
    ],
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Protocol Schema for DP-MAINTAIN-PDR-01",
      "type": "object",
      "required": ["protocolId", "status", "trigger"],
      "properties": {
        "protocolId": { "const": "DP-MAINTAIN-PDR-01" },
        "status": { "const": "active" },
        "trigger": {
          "type": "object",
          "required": ["event"],
          "properties": {
            "event": { "const": "DT2_or_DT3_decision_made" }
          }
        }
      }
    }
  },
  {
    "protocolId": "DP-MAINTAIN-PPR-01",
    "description": "Maintains the Persistent Protocol Register (PPR) by logging the formal approval or significant modification of any dynamic protocol.",
    "status": "active",
    "trigger": {
      "event": "dynamic_protocol_approved_or_modified"
    },
    "steps": [
      {
        "action": "UPDATE_PPR",
        "details": {
          "description": "Identifies the protocol that was changed or approved and creates a corresponding entry in the PPR."
        }
      }
    ],
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Protocol Schema for DP-MAINTAIN-PPR-01",
      "type": "object",
      "required": ["protocolId", "status", "trigger"],
      "properties": {
        "protocolId": { "const": "DP-MAINTAIN-PPR-01" },
        "status": { "const": "active" },
        "trigger": {
          "type": "object",
          "required": ["event"],
          "properties": {
            "event": { "const": "dynamic_protocol_approved_or_modified" }
          }
        }
      }
    }
  },
  {
  "protocolId": "DP-MAINTAIN-IMR-01",
  "description": "Maintains the Important Milestone Register (IMR) by logging significant project achievements. Can be triggered manually by the user or automatically by the AI upon identifying a pre-defined significant event.",
  "status": "active",
  "trigger": {
    "logic": "OR",
    "conditions": [
      {
        "event": "manual_invocation_with_argument",
        "details": {
          "command_prefix": "Logga milstolpe:"
        }
      },
      {
        "event": "ai_identified_significant_event",
        "details": {
          "event_types": [
            "STALEMATE_PROTOCOL_RESOLUTION",
            "HELP_ME_GOD_PROTOCOL_SUCCESS_AFTER_FAILURES",
            "MAJOR_ARCHITECTURAL_DECISION_APPROVED",
            "CRITICAL_SYSTEM_REFACTORING_COMPLETED"
          ]
        }
      }
    ]
  },
  "steps": [
    {
      "action": "UPDATE_IMR",
      "details": {
        "description": "Captures the milestone summary (either from user command or auto-generated from the event context), enriches it with contextual data, and creates a new entry in the IMR. If triggered automatically, the AI will announce the new IMR entry in its subsequent response.",
        "outputSchema": {
          "type": "object",
          "properties": {
            "event_id": { "type": "string", "pattern": "^IMR-\\\\\\d{3}$" },
            "milestone_type": { "enum": ["ARCHITECTURAL", "FUNCTIONAL", "RELEASE", "PROCESS"] },
            "summary": { "type": "string" },
            "details": { "type": "string" },
            "affected_scope": { "type": "array", "items": { "type": "string" } },
            "timestamp": { "type": "string", "format": "date-time" },
            "session_id": { "type": "string" }
          },
          "required": ["event_id", "milestone_type", "summary", "details", "timestamp", "session_id"]
        }
      }
    }
  ]
 },
 {
    "protocolId": "DP-MAINTAIN-ISR-01",
    "description": "Maintains the Interaction Summary Register (ISR) by creating a summary of every user prompt and AI response and adding it to a temporary in-memory queue for batch processing at session end.",
    "status": "active",
    "trigger": {
      "event": "after_every_interaction"
    },
    "steps": [
      {
        "action": "SUMMARIZE_AND_ENQUEUE_INTERACTION",
        "details": {
          "targetQueue": "isr_write_queue",
          "schema": {
            "speakerName": "string",
            "model": { "provider": "string", "name": "string", "version": "string" },
            "speaker": "string",
            "summary": "string"
          }
        }
      }
    ]
  },
  {
    "protocolId": "DP-ISAR-CANDIDATE-FLD-01",
    "status": "active",
    "description": "Föreslå ISAR när FL-D slog senaste turen.",
    "trigger": { "event": "turn_committed", "conditions": [{ "metric":"fld_recent","op":">=","value":1 }] },
    "steps": [
      { "action":"GENERATE_REPORT","details":{"template":"ISAR_PREPARE_V1","outputRegister":"reports_queue"} },
      { "action":"APPEND_TO_REGISTER","details":{"register":"isr_write_queue","fields":["timestamp","event:isar_candidate","reason:fld"]} }
    ],
    "schema": { "artifact":"isar_prepare_notice" }
  },
  {
    "protocolId": "DP-ISAR-CANDIDATE-LOWCONF-01",
    "status": "active",
    "description": "Föreslå ISAR vid låg glidande confidence.",
    "trigger": { "event":"turn_committed", "conditions":[{ "metric":"confidence_ma5","op":"<","value":0.50 }] },
    "steps": [
      { "action":"GENERATE_REPORT","details":{"template":"ISAR_PREPARE_V1","outputRegister":"reports_queue"} },
      { "action":"APPEND_TO_REGISTER","details":{"register":"isr_write_queue","fields":["timestamp","event:isar_candidate","reason:low_conf"]} }
    ],
    "schema": { "artifact":"isar_prepare_notice" }
  },
  {
    "protocolId": "DP-ISAR-CANDIDATE-CONTEXT-01",
    "status": "active",
    "description": "Föreslå ISAR vid hög token-fyllnad eller låg kontextintegritet.",
    "trigger": { "event":"turn_committed", "conditions":[{ "metric":"token_fill_ratio","op":">=","value":0.80 }] },
    "steps": [
      { "action":"GENERATE_REPORT","details":{"template":"ISAR_PREPARE_V1","outputRegister":"reports_queue"} },
      { "action":"APPEND_TO_REGISTER","details":{"register":"isr_write_queue","fields":["timestamp","event:isar_candidate","reason:context"]} }
    ],
    "schema": { "artifact":"isar_prepare_notice" }
  },
  {
    "protocolId": "DP-ISAR-CANDIDATE-ENTROPY-01",
    "status": "active",
    "description": "Föreslå ISAR vid återkommande entropiavvikelser.",
    "trigger": { "event":"turn_committed", "conditions":[{ "metric":"multi_sample_flags_last2","op":">=","value":2 }] },
    "steps": [
      { "action":"GENERATE_REPORT","details":{"template":"ISAR_PREPARE_V1","outputRegister":"reports_queue"} },
      { "action":"APPEND_TO_REGISTER","details":{"register":"isr_write_queue","fields":["timestamp","event:isar_candidate","reason:entropy"]} }
    ],
    "schema": { "artifact":"isar_prepare_notice" }
  },
  {
    "protocolId": "DP-RAG-ALERT-01",
    "status": "active",
    "description": "RAG conflicts ≥15 → sänk confidence och varna människa.",
    "trigger": { "event":"rag_factcheck_finished", "conditions":[{ "metric":"rag_conflicts_%","op":">=","value":15 }] },
    "steps": [
      { "action":"GENERATE_REPORT","details":{"template":"ALERT_NOTICE","outputRegister":"reports_queue"} },
      { "action":"APPEND_TO_REGISTER","details":{"register":"isr_write_queue","fields":["timestamp","event:kpi_alert","kpi:rag_conflicts_%"]} },
      { "action":"EXECUTE_VERIFICATION","details":{"verificationProtocol":"CONFIDENCE_ADJUST_-0.10","failPolicy":"continue_with_warning"} }
    ],
    "schema": { "artifact":"alert_notice" }
  },
  {
    "protocolId": "DP-RULESET-PGB-01",
    "description": "Contains the machine-readable, mandatory ruleset extracted from the 'Grundbulten' protocol (P-GB-3.9). These are the non-negotiable gates and invariants for all file I/O.",
    "status": "active",
    "trigger": {
      "event": "protocol_invocation",
      "details": {
        "protocol_name": "Grundbulten"
      }
    },
    "steps": [
      {
        "action": "VALIDATE_AGAINST_RULES",
        "details": {
          "ruleset": {
            "G-1_ChecksumVerification": "If a file to be modified has a `base_checksum_sha256`, the internal memory image's hash MUST match. On mismatch, abort and request a fresh file.",
            "G0_ContextIntegrity": "If context integrity is < 99%, abort. Require supplementary sources/summary and a new run.",
            "G1_ContextAbort": "If `is_content_full == false` for the target file, abort immediately. No patches/regeneration allowed until context is 100%.",
            "G2_AntiPlaceholder": "Run the anti-placeholder regex suite. Zero matches are required to pass.",
            "G3_VerificationLevel": "A simulated run log is never sufficient on its own; static checks must be PASS.",
            "G4_LegacySanitization": "Conflicting/superfluous artifacts must be patched/archived before proceeding.",
            "G5_StructuralInvariants": "Before delivery, the following must PASS against the reference version, otherwise abort: AST parse, function/class inventory, public CLI/API contract, critical imports.",
            "Policy_NoEstimatedDiff": "Quantitative diffs may only be reported from CI-calculated values. If reference file is missing or hash mismatch, abort per G-1.",
            "Policy_TruncationDetector": "Compare SHA-256 of three normalized segments (HEAD/MID/TAIL) before/after. On mismatch or missing TAIL, abort.",
            "Rule_HashEvidence": "Upon delivery, a `SHA256_LF: <hash>` line MUST be added to the file's HISTORY section.",
            "Rule_TempRevisionLog": "After every successful, approved delivery of a modified file, a JSON entry MUST be appended to `.tmp/session_revision_log.json`."
          }
        }
      }
    ],
    "schema": {
      "artifact": "grundbulten_compliance_check"
    }
  }
]

