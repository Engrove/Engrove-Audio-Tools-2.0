{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "JSON Schema for System Integrity Check Protocol",
  "description": "Defines the structure for the machine-readable version of the System Integrity Check Protocol (SIC), which is executed at the start of each session to ensure system health.",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "format": "uri-reference",
      "description": "Reference to the validation schema for this JSON object."
    },
    "protocolId": {
      "type": "string",
      "description": "The unique identifier for this protocol.",
      "pattern": "^P-SIC-\\d+\\.\\d+$"
    },
    "title": {
      "type": "string",
      "description": "The official title of the protocol.",
      "const": "System Integrity Check Protocol"
    },
    "version": {
      "type": "string",
      "description": "The version of this protocol file.",
      "pattern": "^\\d+\\.\\d+$"
    },
    "description": {
      "type": "string",
      "description": "A brief explanation of the protocol's purpose and responsibility."
    },
    "strict_mode": {
      "type": "boolean",
      "description": "If true, the AI must strictly adhere to the defined structure and logic without deviation."
    },
    "mode": {
      "type": "string",
      "enum": ["literal"],
      "description": "Ensures the AI interprets the protocol instructions literally."
    },
    "trigger": {
      "type": "object",
      "description": "Defines the event that initiates this protocol's execution.",
      "properties": {
        "event": {
          "type": "string",
          "const": "on_new_session_start",
          "description": "This protocol must run automatically at the beginning of every new session."
        }
      },
      "required": ["event"]
    },
    "analysis_targets": {
      "type": "object",
      "description": "Defines the primary components of the system to be analyzed.",
      "properties": {
        "heuristics": {
          "type": "object",
          "description": "Checks related to the AI's learning database.",
          "properties": {
            "source_file": {
              "type": "string",
              "const": "tools/frankensteen_learning_db.json"
            },
            "checks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "check_id": { "type": "string", "enum": ["CONFLICT_DETECTION", "REDUNDANCY_DETECTION", "COMPLEXITY_INDEX"] },
                  "description": { "type": "string" },
                  "output_key": { "type": "string", "description": "The key used for this check's result in the final report." }
                },
                "required": ["check_id", "description", "output_key"]
              }
            }
          },
          "required": ["source_file", "checks"]
        },
        "protocols": {
          "type": "object",
          "description": "Checks related to the protocol files themselves.",
          "properties": {
            "source_path": {
              "type": "string",
              "const": "docs/ai_protocols/"
            },
            "checks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "check_id": { "type": "string", "enum": ["REACHABILITY_ANALYSIS", "GRUNDBULTEN_PRIORITY"] },
                  "description": { "type": "string" },
                  "output_key": { "type": "string" }
                },
                "required": ["check_id", "description", "output_key"]
              }
            }
          },
          "required": ["source_path", "checks"]
        }
      },
      "required": ["heuristics", "protocols"]
    },
    "dynamic_protocol_status_checks": {
        "type": "object",
        "description": "Specifies checks for the status of key dynamic protocols.",
        "properties": {
            "source_file": {
                "type": "string",
                "const": "docs/ai_protocols/DynamicProtocols.json"
            },
            "protocols_to_check": {
                "type": "array",
                "items": {
                    "type": "string",
                    "pattern": "^DP-"
                }
            },
            "output_key": {
                "type": "string",
                "description": "The key used for this list of statuses in the final report."
            }
        },
        "required": ["source_file", "protocols_to_check", "output_key"]
    },
    "output_definition": {
        "type": "object",
        "description": "Defines the mandatory structure of the JSON report generated by this protocol, which is consumed by the Stature Report.",
        "properties": {
            "status": {
                "type": "string",
                "enum": ["HEALTHY", "WARNING", "CRITICAL"],
                "description": "The overall assessment of system health."
            },
            "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of when the check was completed."
            },
            "checks": {
                "type": "object",
                "description": "A summary of quantitative findings from the analysis targets.",
                "properties": {
                    "heuristicConflicts": { "type": "integer", "minimum": 0 },
                    "heuristicRedundancies": { "type": "integer", "minimum": 0 },
                    "heuristicComplexityWarning": { "type": "boolean" },
                    "unreachableProtocols": { "type": "integer", "minimum": 0 },
                    "grundbultenPriorityOk": { "type": "boolean" }
                },
                "required": ["heuristicConflicts", "heuristicRedundancies", "heuristicComplexityWarning", "unreachableProtocols", "grundbultenPriorityOk"]
            },
            "dynamicProtocolStatus": {
                "type": "array",
                "description": "The reported status of key dynamic protocols.",
                "items": {
                    "type": "object",
                    "properties": {
                        "protocolId": { "type": "string" },
                        "status": { "type": "string", "enum": ["active", "experimental", "deprecated", "not_found"] }
                    },
                    "required": ["protocolId", "status"]
                }
            },
            "summary": {
                "type": "string",
                "description": "A concise, human-readable summary of the findings."
            }
        },
        "required": ["status", "timestamp", "checks", "dynamicProtocolStatus", "summary"]
    }
  },
  "required": [
    "$schema",
    "protocolId",
    "title",
    "version",
    "description",
    "strict_mode",
    "mode",
    "trigger",
    "analysis_targets",
    "dynamic_protocol_status_checks",
    "output_definition"
  ]
}
