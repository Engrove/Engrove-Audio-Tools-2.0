{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "docs/ai_protocols/schemas/DynamicProtocols.schema.json",
  "title": "Dynamic Protocol Schema",
  "description": "Schema for defining a dynamic protocol for AI-driven operations, ensuring strict, verifiable, and traceable execution.",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "format": "uri-reference",
      "description": "The schema against which this document should be validated."
    },
    "strict_mode": {
      "type": "boolean",
      "description": "Global flag to enforce strict adherence to the protocol."
    },
    "mode": {
      "type": "string",
      "description": "Global mode for interpretation, e.g., 'literal'."
    },
    "protocol": {
      "type": "object",
      "description": "The main protocol definition object.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the protocol."
        },
        "title": {
          "type": "string",
          "description": "The human-readable title of the protocol."
        },
        "strict_mode": {
          "type": "boolean",
          "description": "Protocol-specific flag to enforce strict adherence."
        },
        "mode": {
          "type": "string",
          "description": "Protocol-specific mode for interpretation."
        },
        "source_reference": {
          "type": "string",
          "description": "Path to the source document for this protocol."
        },
        "ruleset_id": {
          "type": "string",
          "description": "Identifier for the associated ruleset."
        },
        "philosophy": {
          "type": "object",
          "properties": {
            "purpose": {
              "type": "string"
            },
            "guarantees": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "verification": {
              "type": "string"
            }
          },
          "required": ["purpose", "guarantees", "verification"]
        },
        "workflow": {
          "type": "object",
          "properties": {
            "steps": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "title": { "type": "string" },
                  "reference": { "type": "string" },
                  "description": { "type": "string" },
                  "includes": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "outputs": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                },
                "required": ["id", "title"]
              }
            }
          },
          "required": ["steps"]
        },
        "principles": {
          "type": "object",
          "properties": {
            "no_assumptions": { "type": "string" },
            "traceability": { "type": "string" },
            "structural_stability": { "type": "string" }
          },
          "required": ["no_assumptions", "traceability", "structural_stability"]
        },
        "delivery_matrix": {
          "type": "object",
          "properties": {
            "reference": { "type": "string" },
            "decision_table": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "task_type": { "type": "string" },
                  "delivery_format": { "type": "string" },
                  "justification": { "type": "string" },
                  "reference": { "type": "string" },
                  "threshold": { "type": "string" }
                },
                "required": ["task_type", "delivery_format", "justification"]
              }
            }
          },
          "required": ["reference", "decision_table"]
        },
        "compliance": {
          "type": "object",
          "properties": {
            "status": { "type": "string" },
            "hash_placeholder": { "type": "string" },
            "validation_source": { "type": "string" }
          },
          "required": ["status", "hash_placeholder", "validation_source"]
        }
      },
      "required": [
        "id",
        "title",
        "philosophy",
        "workflow",
        "principles",
        "delivery_matrix",
        "compliance"
      ]
    }
  },
  "required": [
    "$schema",
    "protocol"
  ]
}
