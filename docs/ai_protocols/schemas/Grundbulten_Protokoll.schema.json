{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "JSON Schema for Grundbulten Universal File Handling Protocol",
  "description": "Defines the structure for the machine-readable version of the Grundbulten Protocol (P-GB-4.0), making all file generation/modification rules deterministic and programmatically verifiable.",
  "type": "object",
  "properties": {
    "$schema": { "type": "string", "format": "uri-reference" },
    "protocolId": { "type": "string", "const": "P-GB-4.0-JSON" },
    "title": { "type": "string" },
    "version": { "type": "string", "pattern": "^\\d+\\.\\d+$" },
    "purpose": { "type": "string" },
    "goals": { "type": "array", "items": { "type": "string" } },
    "strict_mode": { "type": "boolean" },
    "mode": { "type": "string", "enum": ["literal"] },

    "phases": {
      "type": "object",
      "description": "Defines the mandatory, sequential phases of the file handling process.",
      "properties": {
        "PREPARATION": {
          "type": "object",
          "description": "Initial checks and metadata setup before any modification logic is developed.",
          "properties": {
            "checks": {
              "type": "array",
              "items": { "$ref": "#/definitions/checkObject" }
            }
          },
          "required": ["checks"]
        },
        "VERIFICATION": {
          "type": "object",
          "description": "Pre-flight checks performed on the generated artifact before it is presented.",
          "properties": {
            "checks": {
              "type": "array",
              "items": { "$ref": "#/definitions/checkObject" }
            }
          },
          "required": ["checks"]
        },
        "DELIVERY": {
          "type": "object",
          "description": "Rules governing the format and content of the final delivery.",
          "properties": {
            "deliveryMatrix": { "$ref": "#/definitions/deliveryMatrix" },
            "capacityHandling": { "$ref": "#/definitions/capacityHandling" },
            "complianceStatement": {
              "type": "object",
              "description": "Defines the structure of the mandatory compliance report.",
              "properties": {
                "required_fields": { "type": "array", "items": { "type": "string" } }
              }
            }
          },
          "required": ["deliveryMatrix", "capacityHandling", "complianceStatement"]
        },
        "POST_DELIVERY": {
          "type": "object",
          "description": "Archiving and logging actions performed after a successful delivery.",
          "properties": {
            "tasks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "taskId": { "type": "string" },
                  "description": { "type": "string" },
                  "details": { "type": "object" }
                },
                "required": ["taskId", "description"]
              }
            }
          },
          "required": ["tasks"]
        }
      },
      "required": ["PREPARATION", "VERIFICATION", "DELIVERY", "POST_DELIVERY"]
    },

    "escalationProtocol": {
      "type": "object",
      "description": "Rules for handling repeated failures.",
      "properties": {
        "max_attempts": { "type": "integer" },
        "escalation_target": { "type": "string", "description": "The protocol to trigger when max_attempts is reached." }
      },
      "required": ["max_attempts", "escalation_target"]
    }
  },
  "required": ["$schema", "protocolId", "phases", "escalationProtocol"],

  "definitions": {
    "checkObject": {
      "type": "object",
      "properties": {
        "checkId": { "type": "string", "description": "A unique identifier for the check, e.g., 'G1_CONTEXT_ABORT'." },
        "description": { "type": "string" },
        "condition": { "type": "string", "description": "A machine-evaluatable condition, e.g., 'is_content_full == false'." },
        "actionOnFail": { "type": "string", "enum": ["ABORT", "WARN"] },
        "errorMessage": { "type": "string", "description": "The message to output if the check fails." }
      },
      "required": ["checkId", "description", "condition", "actionOnFail", "errorMessage"]
    },
    "deliveryMatrix": {
      "type": "array",
      "description": "Deterministic decision matrix for choosing the delivery format.",
      "items": {
        "type": "object",
        "properties": {
          "task_type": { "type": "string" },
          "recommended_format": { "type": "string" },
          "rationale": { "type": "string" }
        },
        "required": ["task_type", "recommended_format"]
      }
    },
    "capacityHandling": {
      "type": "object",
      "description": "Rules for gracefully handling outputs that exceed token limits.",
      "properties": {
        "trigger": { "type": "string", "description": "Condition that triggers this rule, e.g., 'output_size_bytes > 60000'." },
        "abortMessageTemplate": { "type": "string", "description": "Template for the abort message, e.g., 'KAPACITETSBLOCKERAD: kr채ver {N} meddelanden. Beg채r segmenterad leverans?'." },
        "segmentationRules": {
          "type": "object",
          "properties": {
            "numbering_format": { "type": "string", "const": "Del [X/Y]" },
            "completeness_rule": { "type": "string", "const": "Varje del m책ste vara en syntaktiskt komplett och frist책ende enhet." }
          },
          "required": ["numbering_format", "completeness_rule"]
        }
      },
      "required": ["trigger", "abortMessageTemplate", "segmentationRules"]
    }
  }
}
